version: '3'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
      - postgres-test
    environment:
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - DATABASE_DIALECT=${DATABASE_DIALECT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5000:5000"
    volumes:
      - "./backend:/backend:rw"
    
  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data

  postgres-test:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    command: -p 5433
    ports:
      - "5433:5433"
    volumes:
      - ./postgres-data/postgres-test:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    depends_on:
      - postgres
      - postgres-test
    ports:
      - 8080:8080

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "1234:1234"
      - "42821:42821"
    volumes:
      - "./frontend:/frontend:rw"
      - /frontend/node_modules

  nginx:
    image: nginx:latest
    depends_on:
      - backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"